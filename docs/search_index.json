[["install-everything.html", "2 Install everything 2.1 Install R and RStudio 2.2 Create a project 2.3 Add some folders 2.4 Create a library for packages 2.5 Create the .Renviron file 2.6 Install packages we need 2.7 Install midfieldr 2.8 Install midfielddata", " 2 Install everything If you are trying R for the first time, it is vital that you attempt to set up your computer with the necessary software in advance or it will be difficult to keep up. Your pre-workshop homework: 2.1 Install R and RStudio 2.2 Install packages we need 2.3 Install midfielddata 2.4 Install midfieldr 3.1 Create a project 3.2 Add some folders If you already have R and RStudio installed, this is a great time to Make sure your R installation is current Make sure your RStudio installation is current Update your packages by running: update.packages(ask = FALSE, checkBuilt = TRUE) 2.1 Install R and RStudio The first steps are to install R and RStudio. Windows users may have to login as an Administrator before installing the software. Install R for your operating system Install RStudio, a user interface for R Once the installation is complete, you can take a 2-minute tour of the RStudio interface. Lets start (00:5702:32) by R Ladies Sydney [1] The same video includes a longer (7 minute) tour of the four quadrants (panes) in RStudio if you are interested. The RStudio quadrants (07:2114:40) by R Ladies Sydney [1] 2.2 Create a project To begin any project, we create an RStudio Project file and directory. You can recognize an R project file by its .Rproj suffix. If you prefer your instructions with commentary, Start with a Project (02:3404:50) by R Ladies Sydney [1] If you prefer basic written instructions, RStudio, File &gt; New Project &gt; New Directory &gt; New Project Or, click the New Project button in the Console ribbon, In the dialog box that appears, Type the workshop name as the directory name, for example, workshop, or if you like more detail, midfield-workshop-asee-2021 Use the browse button to select a location on your computer to create the project folder Click the Create Project button Whenever you work with the workshop materials, launch the workshop.Rproj file (using the name you actually used) to start the session. 2.3 Add some folders While file organization is a matter of personal preference, we ask that you use the directory structure shown here for your work in the workshop. Assuming we called our project workshop, the minimal directory structure has three folders in it plus the .Rproj file at the top level. \\workshop \\data \\results \\scripts workshop.Rproj We use the folders as follows: data data files results finished graphs and tabulated data formatted for display scripts R scripts that operate on data to produce results If you prefer your instructions with commentary, Make some folders (04:5006:08) by R Ladies Sydney [1] If you prefer basic written instructions, use your usual method of creating new folders on your machine or you can use the New Folder button in the Files pane 2.4 Create a library for packages Packages are like apps for R. As Hadley Wickham states, Packages are the fundamental units of reproducible R code. They include reusable functions, the documentation that describes how to use them, and sample data. If we store packages in a library separate from the base R installation, then when you update R, you dont have to reinstall every package, saving a lot of time. If you happen to be working with R on a network, storing your library locally can save you time tracking down obscure problems that R has with network drives as well. At the top level of your drive, create a new directory (folder) named R. In that directory create a new folder named library, for example, Windows: C:/R/library Mac OS and Linux: ~/R/library 2.5 Create the .Renviron file The .Renviron file is a text file that directs R packages to be installed in the R/library directory created earlier. To create the file, with RStudio open, Create a new text file, File menu &gt; New File &gt; Text File. Save the file to the workshop main directory using the filename .Renviron In this file, write the following line of text that tells R the path to the stand-alone package library you created earlier. Windows: R_LIBS_USER=\"C:/R/library\" Mac OS and Linux: R_LIBS_USER=\"~/R/library\" Save and close to recognize the .Renviron file. Save and close the .Renviron file. Close RStudio Lets check your project directory. You should have at least the following folders and files, \\workshop \\data \\results \\scripts .Renviron workshop.Rproj Remember, every time you create a new project, paste a copy of the .Renviron file at the top level of the project directory. 2.6 Install packages we need The fundamental unit of shareable code in R is the package. For the R novice, an R package is like an app for Ra collection of functions, data, and documentation for doing work in R that is easily shared with others [2]. Most packages are obtained from the CRAN website [3]. To install a CRAN package using RStudio: Launch RStudio The RStudio interface has several panes. We want the Files/Plots/Packages pane. Select the Packages tab Next, Click Install on the ribbon In the dialog box, type the name of the package. For our first package, type data.table to install the data.table package [4] Check the Install dependencies box Click the Install button In the RStudio Console, you should see a message like this one, package &#39;data.table&#39; successfully unpacked and MD5 sums checked If successful, the package will appear in the Packages pane, e.g., Repeat the process for the following packages wrapr Rdpack checkmate Alternatively, you can install them all at once by typing in the Console: # midfieldr depends on these packages packages_we_need &lt;- c(&quot;data.table&quot;, &quot;wrapr&quot;, &quot;Rdpack&quot;, &quot;checkmate&quot;) install.packages(packages_we_need) 2.7 Install midfieldr During the installation, Windows users might get a warning message about Rtools, something like the following. You may ignore the warning and carry on. WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version... midfieldr is not yet available from CRAN. To install the development version of midfieldr from its drat repository, type in the Console: # install midfieldr from drat repo install.packages(&quot;midfieldr&quot;, repos = &quot;https://MIDFIELDR.github.io/drat/&quot;, type = &quot;source&quot;) You can confirm a successful installation by running the following lines to bring up the package help page in the Help window. library(&quot;midfieldr&quot;) help(&quot;midfieldr-package&quot;) If the installation is successful, the code chunk above should produce a view of the help page as shown here. 2.8 Install midfielddata Because of its size, the data package is stored in a drat repository instead of CRAN. Installation takes time; please be patient and wait for the Console prompt &gt; to reappear. Type (or copy and paste) the following lines in the RStudio Console. # type in the RStudio Console install.packages(&quot;midfielddata&quot;, repos = &quot;https://MIDFIELDR.github.io/drat/&quot;, type = &quot;source&quot;) # be patient Once the Console prompt &gt; reappears, you can confirm a successful installation by viewing the package help page. In the Console, run: # type in the RStudio Console library(&quot;midfielddata&quot;) help(&quot;midfielddata-package&quot;) If the installation is successful, the code chunk above should produce a view of the help page as shown here. If this step is successful, please continue your homework by completing: 3.1 Create a project 3.2 Add some folders  top of page "]]
